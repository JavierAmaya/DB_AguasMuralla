CREATE OR REPLACE PROCEDURE SP_PRUEBA
IS
CANTIDAD NUMBER;
BEGIN
 SELECT COUNT(ID_PAGO) INTO CANTIDAD FROM PAGOS;
 INSERT INTO PRUEBA VALUES (CANTIDAD);
 COMMIT;
END;

------ CREAR EL JOB

-----
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
  JOB_NAME=> 'JOB_TEST_2',
  JOB_TYPE => 'STORED_PROCEDURE',
  JOB_ACTION => 'SP_PRUEBA',
  NUMBER_OF_ARGUMENTS => 0 ,
  START_DATE => TO_TIMESTAMP('2020-09-15 18:28:00','YYYY-MM-DD HH24:MI:SS'),
  REPEAT_INTERVAL => 'FREQ=MONTHLY;BYMONTHDAY=15;BYHOUR=18;BYMINUTE=40;BYSECOND=0', ------EL PRIMER DIA DE CADA MES
  ENABLED => TRUE
);
END;

SELECT * FROM PRUEBA;
DELETE FROM PRUEBA;

BEGIN 
  DBMS_SCHEDULER.DROP_JOB(
    JOB_NAME=> 'JOB_TEST_2'
  );
END;

BEGIN
  DBMS_SCHEDULER.RUN_JOB(
    JOB_NAME => 'JOB_TEST_2'
  );
END;


----RETORNAR LOS JOBS QUE SE HAN CREADO
SELECT * FROM USER_SCHEDULER_JOBS;

---- CONSULTA PARA VER LOS JOBS QUE SE HAN EJECUTADO Y SI ESTOS HAN TENIDO EXITO EN SU EJECUCION
SELECT JOB_NAME, LOG_DATE, STATUS FROM USER_SCHEDULER_JOB_LOG;


create table Bitacora (
    id_bitacora number ,
    fecha date, 
    hora number,
    descripcion nvarchar2(1000),
    CONSTRAINT PK_ID_bitacora PRIMARY KEY (id_bitacora)
);
drop table Bitacora;


---- trigger para Diario cuando transaccion en PAGOS

CREATE OR REPLACE TRIGGER TG_NEW_TRANSACTION 
AFTER INSERT ON PAGOS
FOR EACH ROW
DECLARE

BEGIN
  INSERT INTO DIARIO VALUES ("SE HA INSERTADO UN NUEVO REGISTRO CON EL ID:" || TG_PAGOS.NEXTVAL;
  COMMIT;

  EXCEPTION
  
    WHEN TOO_MANY_ROWS THEN 
      ERROR_CODE:= SQLCODE;
      ERROR_MSG:= SQLERRM;
      DBMS_OUTPUT.PUT_LINE('SE RETORNAN MUCHOS REGISTROS EN LA SENTENCIA SELEC INTO.');
      DBMS_OUTPUT.put_line(ERROR_MSG);
      
    WHEN OTHERS THEN 
      ERROR_CODE:= SQLCODE;
      ERROR_MSG:= SQLERRM;
      
END;